/*
#include <LiquidCrystal.h>

LiquidCrystal lcd(12, 11, 5, 4, 3, 2);

byte customchar2[8] = { B00100, B01110, B11111, B11111, B01110, B00100, B00000};
byte customchar1[8] = { B00000, B00100, B01110, B11111, B11111, B01110, B00100};

int i = 0;
int a = 1;
int play = 0;
int ispeed = 150;

void setup()
{
  lcd.begin(16, 2);
  lcd.clear();
  lcd.createChar(1, customchar1);
  lcd.createChar(2, customchar2);
  pinMode(8, INPUT);
  digitalWrite(8, HIGH);
  pinMode(9, INPUT);
  digitalWrite(9, HIGH);
  pinMode(10, INPUT);
  digitalWrite(10, HIGH);
  pinMode(7, INPUT);
  digitalWrite(7, HIGH);
  Serial.begin(9600);
}

void loop()
{
  if(digitalRead(8) == HIGH)
  {
    Serial.println("hey");
  }  
  if(play == 0)
  {
  ispeed = 150;
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("press any button");
  lcd.setCursor(2,1);
  lcd.print("to start....");
  delay(250);
   Serial.println(play);
  if(digitalRead(8) == LOW || digitalRead(9) == LOW || digitalRead(10) == LOW || digitalRead(7) == LOW )
  {
    Serial.println("Hey");
    play = 1;
    lcd.clear();
  }
  }
   
  if(play == 1)
  {
    
    Serial.println(ispeed);
      delay(ispeed);
       lcd.clear();
          lcd.setCursor(i,0);
     lcd.write(1);
     
     if((digitalRead(8) == LOW || digitalRead(9) == LOW )&& i > 2)
     {
       a = 4;
       i = -1;
     }
     if((digitalRead(10) == LOW || digitalRead(7) == LOW )&& i < 13)
     {
       a = 3;
       i = 16;
     }
  //traveling toward right 
  if(a == 1)
  {
    i++;
	  if(i > 13 && digitalRead(10) == LOW)
      {
        a = 2;
      }
      else if(i < 2 && digitalRead(9) == LOW)
      {
        a = 1;
      }
      else if(i > 14 && digitalRead(7) == LOW)
      {
        if(ispeed > 20)
        {
        ispeed = ispeed - 10;
        }
        a = 2;
      }
      else if(i < 1 && digitalRead(8) == LOW)
      {
        if(ispeed > 20)
        {
        ispeed = ispeed - 10;
        }
        a = 1;
      }
      else if(i == -1 && a == 2)
      {
        a = 4;
      }
      else if(i == 16 && a == 1)
      {
        a = 3;
      }
  
  }
  //traveling toward left
  else if(a == 2)
  {
      i--;  
      //<--
  //    Serial.println("2");
      
      if(i > 13 && digitalRead(10) == LOW)
      {
        a = 2;
      }
      else if(i < 2 && digitalRead(9) == LOW)
      {
        a = 1;
      }
      else if(i > 14 && digitalRead(7) == LOW)
      {
        if(ispeed > 0)
        {
        ispeed = ispeed - 10;
        }
        a = 2;
      }
      else if(i < 1 && digitalRead(8) == LOW)
      {
        if(ispeed > 0)
        {
        ispeed = ispeed - 10;
        }
        a = 1;
      }
      else if(i == -1 && a == 2)
      {
        a = 4;
      }
      else if(i == 16 && a == 1)
      {
        a = 3;
      }  
  }
  //right side looses
  else if(a == 3)
  {
    lcd.setCursor(4,0);
    lcd.print("LOSER!!!");
    lcd.setCursor(13,1);
    lcd.print("-->");
    delay(4000);
       play = 0;
       a = 2;
  }
  //left side looses
  else if(a == 4)
  {
    lcd.setCursor(4,0);
    lcd.print("LOSER!!!");
    lcd.setCursor(0,1);
    lcd.print("<--");
    delay(4000);
      play = 0;
      a = 1;
  }
  } 
}
#include<LiquidCrystal.h>
const int rs = 12, en = 11, d4 = 5, d5 = 4, d6 = 3, d7 = 2;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

int thisChar = 'a';

void setup() {
  // set up the LCD's number of columns and rows:
  lcd.begin(16, 2);
  // turn on the cursor:
  lcd.cursor();
}

void loop() {
  // reverse directions at 'm':
  if (thisChar == 'm') {
    // go right for the next letter
    lcd.rightToLeft();
  }
  // reverse again at 's':
  if (thisChar == 's') {
    // go left for the next letter
    lcd.leftToRight();
  }
  // reset at 'z':
  if (thisChar > 'z') {
    // go to (0,0):
    lcd.home();
    // start again at 0
    thisChar = 'a';
  }
  // print the character
  lcd.write(thisChar);
  // wait a second:
  delay(1000);
  // increment the letter:
  thisChar++;
}
*/